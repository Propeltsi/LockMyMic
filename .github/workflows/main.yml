name: .NET Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./published

    - name: Create Release Tag
      id: create_tag
      run: |
        echo "RELEASE_VERSION=LockMyMic-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git tag $RELEASE_VERSION
        git push origin $RELEASE_VERSION

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}

    - name: Upload Artifacts to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./published/LockMyMic.exe
        asset_name: LockMyMic.exe
        asset_content_type: application/octet-stream
